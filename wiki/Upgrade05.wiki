#summary Review of changes in 0.5 and what to change
#labels Featured

= Changes =

While there are no specifically breaking changes in this version's release, a number of faulty methods which could not be properly tested were updated
for testability, readability, and accuracy. As such, introduction of some of the exception handling in these methods may cause previously functional service
calls to fail. Please submit issue reports for any unexpected failures. You may need to support better exception handling as a result of these changes.

== GWT#create style Service Creation

Starting in 0.5, the old `SyncProxy#newProxyInstance` methods have been deprecated in favor of the more GWT-like `SyncProxy#create` methods. The old
newProxyInstance methods have been appropriately upgraded with JavaGenerics and should continue to function, but it is highly recommended
that you begin switching over to the newer methods as future versions of this library may stop supporting those old methods. Additionally, the old
methods were very hard to test, so full-testing on the old methods is not available as of the 0.5 library (was very little testing to begin with
for those methods anyway). Synchronous services are of course still supported in SyncProxy through the `SyncProxy#createSync` method. See the 
[QuickStart] guide for a review of the new methods.

== ServiceDefTarget support ==

SyncProxy 0.5 also adds support for the common GWT style:

{{{
	GreetingServiceAsync greetService = GWT.create(GreetingService.class);
	((ServiceDefTarget) greetService).setServiceEntryPoint(getModuleBaseURL()
		+ "greetingEntryPoint");
}}}

which must be implemented with flag setting to ignore a service missing the expected annotation:

{{{
	// Suppress exception that the service interface doesn't have the RemoteServiceRelativePath annotation
	SyncProxy.suppressRelativePathWarning(true);
	GreetingServiceAsync greetService = SyncProxy.create(GreetingService.class);
	((ServiceDefTarget) greetService).setServiceEntryPoint(getModuleBaseURL()
		+ "greetingEntryPoint");
	// You may also use the settings object to manually set the Entry Point as shown above #setRemoteServiceRelativePath
}}}

== XSRF Protection ==

XSRF Protected Scripts are not fully support in 0.5, but we have made steps towards proper support of these scripts. The RpcToken system is now implemented and sufficiently test
within the library. However, a lack of experience with XSRF has forced the decision to push off this implementation in favor of provided the upgraded library features
sooner. Anyone with more experience with XSRF, please feel free to join this project and contribute to the support of XSRF in SyncProxy.

== Cookie Issues and Support ==

Implementing unit testing for the Cookie issues has proved more time-consuming than expected, so full resolution of the cookie issues has been delayed until the next version
where proper testing and support for the multiple session feature of SyncProxy can be properly tested. However, given the relative ubiquity of the Sessions and Cookie issues,
I have included the patches provided by users in this source code, activated by temporary flag methods which will be deprecated once proper testing can be completed for these
patches. 